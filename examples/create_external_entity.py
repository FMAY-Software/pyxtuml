#!/usr/bin/env python
# encoding: utf-8
# Copyright (C) 2014 John TÃ¶rnblom

import sys
import os
import uuid

base_dir = '%s/../' % os.path.dirname(__file__)
sys.path.append(base_dir)

from xtuml import io

loader = io.load.ModelLoader()
loader.build_parser()
loader.filename_input('%s/resources/ooaofooa_schema.sql' % base_dir)
loader.filename_input('%s/resources/Globals.xtuml' % base_dir)


m = loader.build_metamodel()

#
# Create top-level package (External Entities - generated by pyxtuml)
#
pe_pe = m.new('PE_PE',
              Element_ID=uuid.uuid4(),
              Visibility=True,
              type=7)
    
ep_pkg = m.new('EP_PKG',
               Package_ID=pe_pe.Element_ID,
               Name='External Entities - generated by pyxtuml')


#
# Create an external entity (My_External_Entity)
#
pe_pe = m.new('PE_PE',
              Element_ID=uuid.uuid4(),
              Package_ID=ep_pkg.Package_ID,
              Visibility=True,
              type=5)
    
s_ee = m.new('S_EE',
             EE_ID=pe_pe.Element_ID,
             Name='My_External_Entity',
             Key_Lett='My_External_Entity')
    

#
# Create a bridge operation (My_Bridge_Operation: boolean)
#
s_dt = m.select_one('S_DT', Name='boolean')

s_ee = m.new('S_BRG',
             Brg_ID=uuid.uuid4(),
             EE_ID=s_ee.EE_ID,
             Name='My_Bridge_Operation',
             DT_ID=s_dt.DT_ID)


#
# Create a bridge parameter (My_Parameter: string)
#
s_dt = m.select_one('S_DT', Name='string')

s_bparm = m.new('S_BPARM',
                BParm_ID=uuid.uuid4(),
                Brg_ID=s_ee.Brg_ID,
                Name='My_Parameter',
                DT_ID=s_dt.DT_ID)


print '-- root-types-contained: Package_c'
print '-- generics'
print '-- BP 7.1 content: StreamData syschar: 3 persistence-version: 7.1.6'
print io.persist.serialize_model(m)
print ''
print ''
print '-- Copy the SQL statements above, and paste them into the BridgePoint editor'
print '-- with a project selected in the project explorer. NOTE: do not remove the'
print '-- first few comments.'

